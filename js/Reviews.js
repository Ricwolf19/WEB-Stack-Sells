// Clase que representa una rese√±a
class Rese√±a {
  constructor(usuario, puntuacion, comentario) {
    this.usuario = usuario;
    this.puntuacion = puntuacion;
    this.comentario = comentario;
  }

  // M√©todo que devuelve el HTML para mostrar la rese√±a
  obtenerHTML() {
    const card = document.createElement('div');
    card.classList.add('rese√±a-card');

    const usuarioIcono = document.createElement('span');
    usuarioIcono.classList.add('usuario-icon');
    usuarioIcono.textContent = 'üë§';

    const info = document.createElement('div');
    info.innerHTML = `
      <p>Usuario: ${this.usuario}</p>
      <p>Puntuaci√≥n: ${this.puntuacion} ‚≠ê</p>
      <p>Comentario: ${this.comentario}</p>
    `;

    card.appendChild(usuarioIcono);
    card.appendChild(info);

    return card;
  }
}

// Array que almacena las rese√±as existentes
const rese√±as = [
  new Rese√±a('Usuario1', 4, 'Gran experiencia de compra en Stack Sells. ¬°Recomiendo totalmente!'),
  new Rese√±a('Usuario2', 5, 'Productos de alta calidad y entrega r√°pida. ¬°Volver√© a comprar!'),
  new Rese√±a('Usuario3', 3, 'Buen servicio al cliente, pero el env√≠o fue un poco lento.'),
  new Rese√±a('Usuario4', 4, 'Variedad de productos y precios justos. Buena experiencia.'),
  new Rese√±a('Usuario5', 2, 'Producto defectuoso recibido. La devoluci√≥n fue complicada.'),
  new Rese√±a('Usuario6', 5, 'Incre√≠ble selecci√≥n de productos. R√°pido y eficiente.'),
  new Rese√±a('Usuario7', 3, 'El producto no cumpli√≥ completamente con mis expectativas.'),
  new Rese√±a('Usuario8', 4, 'Gran calidad y atenci√≥n al cliente. Env√≠o r√°pido.'),
  new Rese√±a('Usuario9', 5, '¬°Me encanta comprar aqu√≠! Todo siempre llega perfecto.'),
  new Rese√±a('Usuario10', 2, 'Problemas con la facturaci√≥n. El servicio al cliente fue √∫til.'),
  new Rese√±a('Usuario11', 4, 'Buenos precios y entrega r√°pida. Sin quejas.'),
  new Rese√±a('Usuario12', 5, 'Productos √∫nicos y de alta calidad. Muy satisfecho.'),
  new Rese√±a('Usuario13', 3, 'La interfaz del sitio web podr√≠a mejorar. Buena variedad.'),
  new Rese√±a('Usuario14', 4, 'F√°cil proceso de compra. Productos bien embalados.'),
  new Rese√±a('Usuario15', 5, '¬°Maravilloso! Gran atenci√≥n al cliente y productos exclusivos.'),
  new Rese√±a('Usuario16', 3, 'Algunos productos estaban agotados. Buena experiencia en general.'),
  new Rese√±a('Usuario17', 4, 'Precios competitivos. Env√≠o dentro del plazo estimado.'),
  new Rese√±a('Usuario18', 5, 'Nunca decepciona. Siempre encuentro lo que necesito.'),
  new Rese√±a('Usuario19', 3, 'Atenci√≥n al cliente receptiva. La calidad del producto podr√≠a mejorar.'),
  new Rese√±a('Usuario20', 4, 'Sitio confiable. Buenos precios y servicio r√°pido.'),
];

rese√±as.push(...getReviewsFromLocalStorage());

function getReviewsFromLocalStorage() {
  const reviews = JSON.parse(localStorage.getItem('reviews') || '[]');
  return reviews.map(review => new Rese√±a(review.usuario, review.puntuacion, review.comentario));
}

// Funci√≥n para mostrar las rese√±as existentes en la interfaz
function mostrarRese√±asHTML() {
  const rese√±asDiv = document.getElementById('rese√±as-container');
  rese√±asDiv.innerHTML = '';

  // Recorre todas las rese√±as y las agrega a la interfaz
  rese√±as.forEach(rese√±a => {
    const card = rese√±a.obtenerHTML();
    rese√±asDiv.appendChild(card);
  });
}

// Evento que se ejecuta cuando la ventana se ha cargado completamente
window.addEventListener('load', () => {
  mostrarRese√±asHTML();
});

// Funci√≥n para permitir a los usuarios dejar una nueva rese√±a
function dejarRese√±a() {
  const nombre = prompt('Ingresa tu nombre:');
  const puntuacion = prompt('Califica del 1 al 5:');
  const comentario = prompt('Deja tu comentario:');

  // Verifica que se hayan ingresado todos los campos necesarios
  if (nombre && puntuacion && comentario) {
    // Crea una nueva instancia de Rese√±a y la agrega al array de rese√±as
    const nuevaRese√±a = new Rese√±a(nombre, parseInt(puntuacion), comentario);
    rese√±as.push(nuevaRese√±a);
    
    localStorage.setItem('reviews', JSON.stringify(rese√±as));

    // Muestra las rese√±as actualizadas en la interfaz
    mostrarRese√±asHTML();
  } else {
    alert('Ingresa todos los campos para dejar una rese√±a v√°lida.');
  }
}

/*
Documentacion de Reviews.js

1. **`Rese√±a` Clase:**
   - Representa una rese√±a.
   - Utiliza una clase para organizar la informaci√≥n relacionada con una rese√±a.

2. **`rese√±as` Array:**
   - Almacena las rese√±as existentes.
   - Un ejemplo de estructura de datos tipo lista (array) para gestionar las rese√±as.

3. **`obtenerHTML` M√©todo:**
   - Devuelve el HTML necesario para mostrar la informaci√≥n de una rese√±a en la interfaz.
   - Encapsula la l√≥gica de presentaci√≥n dentro de la propia clase.

4. **`mostrarRese√±asHTML` Funci√≥n:**
   - Muestra las rese√±as existentes en la interfaz.
   - Utiliza un bucle para recorrer el array de rese√±as y agregarlas a la lista en el documento HTML.

5. **Event Listeners:**
   - El evento `load` asegura que las rese√±as se muestren cuando la p√°gina se carga.
   - La funci√≥n `dejarRese√±a` permite a los usuarios dejar una nueva rese√±a y actualiza la interfaz.

*/
